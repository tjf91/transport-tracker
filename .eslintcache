[{"S:\\Projects\\transport-tracker\\src\\index.js":"1","S:\\Projects\\transport-tracker\\src\\reportWebVitals.js":"2","S:\\Projects\\transport-tracker\\src\\redux\\store.js":"3","S:\\Projects\\transport-tracker\\src\\components\\App\\App.js":"4","S:\\Projects\\transport-tracker\\src\\redux\\userReducer.js":"5","S:\\Projects\\transport-tracker\\src\\components\\routes.js":"6","S:\\Projects\\transport-tracker\\src\\components\\Home\\Home.js":"7","S:\\Projects\\transport-tracker\\src\\components\\Header\\Header.js":"8","S:\\Projects\\transport-tracker\\src\\components\\Header\\Auth\\Auth.js":"9","S:\\Projects\\transport-tracker\\src\\components\\DriverDisplay\\DriverDisplay.js":"10","S:\\Projects\\transport-tracker\\src\\components\\Driver\\Driver.js":"11","S:\\Projects\\transport-tracker\\src\\components\\TripsDisplay\\TripsDisplay.js":"12","S:\\Projects\\transport-tracker\\src\\components\\Trip\\Trip.js":"13","S:\\Projects\\transport-tracker\\src\\components\\Forms\\ReceiptForm.js":"14","S:\\Projects\\transport-tracker\\src\\components\\Forms\\TripForm.js":"15","S:\\Projects\\transport-tracker\\src\\components\\MapboxGL\\MapboxGL.js":"16","S:\\Projects\\transport-tracker\\src\\components\\Receipt\\Receipt.js":"17","S:\\Projects\\transport-tracker\\src\\components\\Charts\\Pie.js":"18","S:\\Projects\\transport-tracker\\src\\components\\Charts\\Bar.js":"19","S:\\Projects\\transport-tracker\\src\\components\\Charts\\options.js":"20","S:\\Projects\\transport-tracker\\src\\components\\Charts\\barFunctions.js":"21","S:\\Projects\\transport-tracker\\src\\components\\Driver\\DriverEdit.js":"22","S:\\Projects\\transport-tracker\\src\\components\\MapboxGL\\DriverMap.js":"23","S:\\Projects\\transport-tracker\\src\\components\\Home\\Welcome.js":"24"},{"size":794,"mtime":1611140254845,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":312,"mtime":1610999006010,"results":"28","hashOfConfig":"26"},{"size":493,"mtime":1611097084111,"results":"29","hashOfConfig":"26"},{"size":894,"mtime":1611005404302,"results":"30","hashOfConfig":"26"},{"size":512,"mtime":1610995510501,"results":"31","hashOfConfig":"26"},{"size":756,"mtime":1611067034684,"results":"32","hashOfConfig":"26"},{"size":2685,"mtime":1611098218582,"results":"33","hashOfConfig":"26"},{"size":1701,"mtime":1611029871986,"results":"34","hashOfConfig":"26"},{"size":2942,"mtime":1611070144925,"results":"35","hashOfConfig":"26"},{"size":3111,"mtime":1611059209942,"results":"36","hashOfConfig":"26"},{"size":7350,"mtime":1611140061406,"results":"37","hashOfConfig":"26"},{"size":8429,"mtime":1611104825590,"results":"38","hashOfConfig":"26"},{"size":3018,"mtime":1611082797041,"results":"39","hashOfConfig":"26"},{"size":1401,"mtime":1611075861983,"results":"40","hashOfConfig":"26"},{"size":4021,"mtime":1611139570683,"results":"41","hashOfConfig":"26"},{"size":2634,"mtime":1611079445320,"results":"42","hashOfConfig":"26"},{"size":2086,"mtime":1611004116555,"results":"43","hashOfConfig":"26"},{"size":3117,"mtime":1611141279988,"results":"44","hashOfConfig":"26"},{"size":1450,"mtime":1610548016834,"results":"45","hashOfConfig":"26"},{"size":775,"mtime":1611141279178,"results":"46","hashOfConfig":"26"},{"size":2899,"mtime":1610996204423,"results":"47","hashOfConfig":"26"},{"size":2219,"mtime":1611067833829,"results":"48","hashOfConfig":"26"},{"size":2928,"mtime":1611115368639,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"qa5s2q",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"S:\\Projects\\transport-tracker\\src\\index.js",[],["111","112"],"S:\\Projects\\transport-tracker\\src\\reportWebVitals.js",[],"S:\\Projects\\transport-tracker\\src\\redux\\store.js",[],"S:\\Projects\\transport-tracker\\src\\components\\App\\App.js",[],"S:\\Projects\\transport-tracker\\src\\redux\\userReducer.js",[],"S:\\Projects\\transport-tracker\\src\\components\\routes.js",[],"S:\\Projects\\transport-tracker\\src\\components\\Home\\Home.js",[],"S:\\Projects\\transport-tracker\\src\\components\\Header\\Header.js",["113","114"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Auth from './Auth/Auth'\r\nimport './Header.scss'\r\nimport logo from '../imgs/favpng_truck-driver-car-less-than-truckload-shipping-driving.png'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport {loginUser,logout} from '../../redux/userReducer'\r\nimport axios from 'axios'\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nfunction Header(props){\r\n    const [pos, setPos]= useState({longitude:null,latitude:null})\r\n\r\n    const handleLogout=()=>{\r\n        console.log('logout')\r\n        props.history.push('/')\r\n        props.logout()\r\n    }\r\n    const updateLocation=()=>{\r\n        if(pos.latitude){\r\n            axios.put(`/drivers/${props.d_id}?q=location`,{lng:pos.longitude,lat:pos.latitude})\r\n            .then(()=>console.log('location update',pos))\r\n            .catch(e=>console.log(e))\r\n        }\r\n    }\r\n    function successLocation(e){\r\n        console.log('success',e)    \r\n        const {longitude,latitude}=e.coords\r\n        console.log()        \r\n        setPos({longitude,latitude})\r\n        updateLocation()\r\n              \r\n      }\r\n    function errorLocation(e){\r\n        console.log('ERROR LOCATION')\r\n      \r\n    }\r\n    \r\n    useEffect(()=>{\r\n        axios.get('/auth/user')\r\n        .then(res=>{\r\n            const {id,d_id,name}=res.data\r\n            props.loginUser({name,id,d_id})\r\n            if(props.d_id){\r\n                console.log('geo')   \r\n                    navigator.geolocation.getCurrentPosition(successLocation,errorLocation,{enableHighAccuracy:true})\r\n                    updateLocation()         \r\n                   }\r\n        })\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n        if(props.d_id){\r\n            console.log('geo')   \r\n                navigator.geolocation.getCurrentPosition(successLocation,errorLocation,{enableHighAccuracy:true})\r\n                updateLocation()         \r\n               }\r\n    },[props.d_id])\r\n    \r\n    return(\r\n        <header>            \r\n            <Link to={`/${props.name}`}>\r\n                <img src={logo} alt='Logo' className='main-logo'/>\r\n            </Link>\r\n            {\r\n            props.isLoggedIn\r\n            ?<h1>Welcome<br/> {props.name}</h1>\r\n            :<h1>Transport Tracker</h1>\r\n            }\r\n            {\r\n                props.isLoggedIn\r\n                ?<Button id='logout' onClick={handleLogout}>Logout</Button>\r\n                :<Auth /> \r\n                   \r\n            }\r\n              \r\n        </header>\r\n    )\r\n}\r\nfunction mapStateToProps(reduxState){\r\n    return reduxState\r\n}\r\nexport default connect(mapStateToProps,{loginUser,logout})(withRouter(Header))","S:\\Projects\\transport-tracker\\src\\components\\Header\\Auth\\Auth.js",[],"S:\\Projects\\transport-tracker\\src\\components\\DriverDisplay\\DriverDisplay.js",["115","116","117"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport Driver from '../Driver/Driver'\r\nimport DriverEdit from '../Driver/DriverEdit'\r\nimport DriverMap from '../MapboxGL/DriverMap'\r\nimport './DriverDisplay.scss'\r\nimport '../styles/styles.scss'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nfunction DriverDisplay(props){\r\n    const [drivers,setDrivers]=useState([])\r\n    const [formToggle, setFormToggle]=useState(false)\r\n    const [formInput, setFormInput]=useState({name:'',password:'',phone_number:'',email:''})\r\n\r\n    const handleFormInput=(e)=>{\r\n        setFormInput({...formInput,[e.target.name]:e.target.value})\r\n    }\r\n    const addDriver=(e)=>{\r\n        e.preventDefault()\r\n        axios.post(`/companies/${props.id}/drivers`,formInput)\r\n        .then(res=>setDrivers(res.data))\r\n        .catch(e=>console.log(e))\r\n        setFormToggle(false)\r\n    }\r\n\r\n    const handleFormToggle=()=>{        \r\n        console.log(formToggle)\r\n        setFormToggle(!formToggle)\r\n    }\r\n\r\n    const getDrivers=()=>{        \r\n        axios.get(`/companies/${props.id}/drivers`)\r\n        .then(res=>setDrivers(res.data))\r\n        .catch(e=>console.log(e))\r\n    }\r\n    const forceUpdate=()=>{\r\n        console.log('getting drivers again')\r\n        getDrivers()\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getDrivers() \r\n               \r\n    },[])\r\n    const mappedDrivers=drivers.map((driver,index)=>(\r\n        <div key={driver.d_id} >            \r\n            <Driver\r\n            driver={driver}\r\n            key={driver.d_id}\r\n            forceUpdate={forceUpdate}\r\n            />           \r\n            </div>\r\n        )\r\n    )\r\n    \r\n    return(\r\n        <div className='driver-display'>\r\n            <DriverMap\r\n            drivers={drivers}\r\n             />\r\n            <Button variant='contained' id='add-driver' onClick={handleFormToggle}>Add Driver</Button>\r\n            {\r\n                formToggle&&\r\n            <form onSubmit={addDriver}>\r\n                <TextField onChange={handleFormInput} placeholder='name' name='name'/>\r\n                <TextField onChange={handleFormInput} placeholder='password' name='password' />\r\n                <TextField onChange={handleFormInput} placeholder='phone-number' name='phone_number'/>\r\n                <TextField onChange={handleFormInput} placeholder='email' name='email'/>                \r\n                <Button type='submit' variant='contained' id='submit-driver' >Submit New Driver</Button>\r\n            </form>            \r\n             \r\n            }\r\n            <div className='drivers'>\r\n\r\n            {mappedDrivers}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction mapStateToProps(reduxState){\r\n    return reduxState\r\n}\r\nexport default connect(mapStateToProps)(withRouter(DriverDisplay))","S:\\Projects\\transport-tracker\\src\\components\\Driver\\Driver.js",["118"],"import React, { useEffect, useState } from 'react'\r\nimport DriverEdit from './DriverEdit'\r\nimport './Driver.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {updateProfilePic} from '../../redux/userReducer'\r\nimport '../styles/styles.scss'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nfunction Driver(props){\r\n    const [formToggle, setFormToggle]=useState(false)\r\n    const [driverPic, setDriverPic]=useState(props.driver.profile_pic||'https://persona-project.s3-us-west-1.amazonaws.com/Daco_5508649.png')\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleFormToggle=()=>{        \r\n        setFormToggle(!formToggle)\r\n        handleClose()    \r\n    }\r\n    const updatePic =()=>{\r\n        setDriverPic(`https://persona-project.s3-us-west-1.amazonaws.com/${props.driver.name.replace(/\\s/g, '-')}-${props.driver.driver_d_id}-profile_pic`)       \r\n        \r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n\r\n    useEffect(()=>{\r\n        updatePic()\r\n    })\r\n\r\n    return(\r\n        <div key={props.driver.d_id} className='driver'>\r\n            <Link onClick={()=>props.updateProfilePic(driverPic)} to={{pathname:`/${props.name}/${props.driver.d_id}/trips`,driver:props.driver}}>\r\n            <img onError={e=>e.target.src='https://persona-project.s3-us-west-1.amazonaws.com/Daco_5508649.png'} key={Date.now()} src={driverPic}  alt='profile pic' className='profile-pic'/>\r\n            </Link>\r\n            {props.driver.name}\r\n            {\r\n                // props.driver.profile_pic\r\n                // ?<Button variant='contained' onClick={handleFormToggle}>Edit</Button>                \r\n                // :\r\n                <div>\r\n                <Button id='options' aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} variant='contained'>Options</Button>\r\n                <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                >\r\n                <MenuItem onClick={handleFormToggle}>Change Picture</MenuItem>\r\n                <MenuItem onClick={handleClose}>Reset Password</MenuItem>\r\n                <MenuItem onClick={handleClose}>Delete Driver</MenuItem>\r\n              </Menu>\r\n                  </div>\r\n            }\r\n            {\r\n                formToggle&&\r\n                <DriverEdit\r\n              \r\n                driver={props.driver} \r\n                updatePic={updatePic}\r\n                handleFormToggle={handleFormToggle}\r\n                forceUpdate={props.forceUpdate}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(reduxState){\r\n    return reduxState\r\n}\r\nexport default connect(mapStateToProps,{updateProfilePic})(Driver)","S:\\Projects\\transport-tracker\\src\\components\\TripsDisplay\\TripsDisplay.js",["119","120","121","122","123","124","125","126","127"],"import axios from 'axios'\r\nimport Moment from \"react-moment\";\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link,withRouter } from 'react-router-dom'\r\nimport TripForm from '../Forms/TripForm'\r\nimport '../styles/styles.scss'\r\nimport './TripsDisplay.scss'\r\nimport Pie from '../Charts/Pie';\r\nimport Bar from '../Charts/Bar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport editPencil from '../imgs/favpng_icon-design-editing-iconfinder-icon.png'\r\nimport deleteIcon from '../imgs/favpng_button-checkbox.png'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport moment from 'moment'\r\n\r\nfunction TripDisplay(props){    \r\n    const [trips,setTrips]=useState([])\r\n    const [newTripId, setNewTripId]=useState(null)\r\n    const [toggleForm, setToggleForm]=useState(false)    \r\n    const [driverCompany, setDriverCompany]=useState('')\r\n    const [driverCompanyId, setDriverCompanyId]=useState(null)\r\n    const [status,setStatus]=useState('')\r\n    const handleFormToggle=()=>setToggleForm(!toggleForm)\r\n\r\n    const getPic=()=>{\r\n        \r\n    }\r\n    \r\n\r\n    \r\n        //needed to get driver's last company name and id\r\n    const getDriverCompany=()=>{\r\n        axios.get(`/drivers/${props.d_id}/companies`)\r\n        .then(res=>{\r\n            console.log(res.data)\r\n            setDriverCompanyId(res.data.id)\r\n            setDriverCompany(res.data.name)})\r\n        .catch(e=>console.log(e))   \r\n    } \r\n    //this was in case of multiple companies per driver, really unnecessary this way.    \r\n    const getTrips=()=>{    \r\n        if(props.id){\r\n            axios.get(`/companies/${props.id}/drivers/${props.match.params.driver_d_id}/trips`)\r\n            .then(res=>setTrips(res.data))\r\n            .catch(e=>console.error(e.response.data))\r\n\r\n        }\r\n        if(props.d_id){\r\n\r\n            getDriverCompany()   \r\n            axios.get(`/drivers/${props.d_id}/trips`)\r\n            .then(res=>setTrips(res.data))\r\n            .catch(e=>console.error(e.response.data))\r\n        }\r\n\r\n    }\r\n    const beginTrip=(trip)=>{        \r\n            axios.post(`/companies/${props.id||driverCompanyId}/drivers/${props.match.params.driver_d_id||props.d_id}/trips`,trip)\r\n            .then(res=>{\r\n                setTrips([res.data,...trips])\r\n                props.history.push(`/${props.id?props.id:driverCompanyId}/${props.match.params.driver_d_id||props.d_id}/trips/${res.data.id}`)\r\n            })\r\n                \r\n            .catch(e=>console.log(e))  \r\n\r\n    }\r\n\r\n    const handleEditTrips=(e)=>{\r\n        \r\n        \r\n    }    \r\n    \r\n    //update list of trips\r\n    useEffect(()=>{         \r\n        getTrips()\r\n        console.log('getting TRIPS effect')\r\n        \r\n        },[trips.length,props.id,props.d_id])\r\n    \r\n        const handleChange = (event) => {\r\n            console.log(event.target.value);\r\n          };\r\n\r\n    const mappedTrips=trips.map((trip,index)=>(\r\n               \r\n        <main>\r\n        <div className='trip-title'>\r\n        <div className='trip-info'>\r\n        <Link to={{pathname:`/${props.id?props.id:driverCompanyId}/${props.match.params.driver_d_id||props.d_id}/trips/${trip.id}`,driver:props.location.driver}}>\r\n            <h4>\r\n            {trip.name}\r\n            </h4>\r\n            </Link>\r\n        <Moment format=\"MM/DD/YYYY\">{trip.date_start}</Moment>\r\n        {trip.status==='complete' &&\r\n        <Moment format=\"MM/DD/YYYY\">{trip.date_end}</Moment>\r\n}\r\n        <FormControl >\r\n        <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={trip.status}\r\n          onChange={(e)=>{          \r\n            axios.put(`/companies/${props.id||driverCompanyId}/drivers/${props.d_id||props.match.params.driver_d_id}/trips/${trip.id}`,{...trip,status:e.target.value,date_end:moment(new Date()).format(\"yyyy-MM-DD\")})\r\n            .then(res=>{\r\n                getTrips()\r\n                // setTrips([...trips,res.data])\r\n                \r\n            })\r\n            .catch(e=>console.log(e))\r\n          }}\r\n          >\r\n          <MenuItem value='active'>active</MenuItem>  \r\n          <MenuItem value='complete'>complete</MenuItem>\r\n                   \r\n        </Select>\r\n      </FormControl>\r\n            </div>\r\n            \r\n\r\n            \r\n\r\n        \r\n            <div className='display-pie-chart'>\r\n        <Pie\r\n        company_id={props.id||driverCompanyId}\r\n        driver_d_id={props.d_id||props.match.params.driver_d_id}\r\n        trip_id={trip.id}\r\n        margin={{ top: 40, right: 0, bottom: 40, left: 80}}\r\n        radialLabelsLinkDiagonalLength={5}\r\n        radialLabelsLinkHorizontalLength={0}\r\n        \r\n        />\r\n        <p>\r\n        </p>\r\n        </div>\r\n        <div>\r\n\r\n            <img onClick={()=>{\r\n                console.log(`request to ${props.id||driverCompanyId} and ${props.d_id||props.match.params.driver_d_id}with final${trip.id}`)\r\n                            }} src={editPencil} className='action-img' alt=''/>\r\n                            <br />\r\n             <img onClick={()=>{\r\n                 window.confirm('You sure about erasing this receipts')&&\r\n                axios.delete(`/companies/${props.id||driverCompanyId}/drivers/${props.d_id||props.match.params.driver_d_id}/trips/${trip.id}`)\r\n                .then(res=>{                    \r\n                    console.log('success?',res.data)\r\n                    getTrips()\r\n                })\r\n                .catch(e=>console.error(alert(e.response.data)))\r\n\r\n             }\r\n                            }           \r\n                          src={deleteIcon} className='action-img' alt=''/>\r\n\r\n        </div>\r\n        </div>\r\n            \r\n        <div className='display-bar-chart'>\r\n            <Bar\r\n            company_id={props.id||driverCompanyId}\r\n            driver_d_id={props.d_id||props.match.params.driver_d_id}\r\n            trip_id={trip.id}    \r\n            margin={{ top: 0, right: 130, bottom: 0, left: 60 }}   \r\n               \r\n            />\r\n        </div>\r\n       \r\n        </main>\r\n    )\r\n)\r\n        \r\n    return(\r\n        <div className='trips-display'>\r\n            <h5>{driverCompany}</h5>            \r\n            <Button id='begin' variant=\"contained\"  onClick={handleFormToggle}>Begin Trip</Button>\r\n            <img key={Date.now()} src={props.profile_pic||\r\n            `https://persona-project.s3-us-west-1.amazonaws.com/${props.name.replace(/\\s/g, '-')}-${props.d_id}-profile_pic`\r\n            }  className='profile-pic' alt='Please add pic'/>\r\n            {\r\n                toggleForm&&\r\n                <TripForm \r\n                id={props.id||driverCompanyId}\r\n                d_id={props.match.params.driver_d_id||props.d_id}\r\n                beginTrip={beginTrip}\r\n                add_trip={true}\r\n                handleFormToggle={handleFormToggle}\r\n                />\r\n            }\r\n            {mappedTrips}\r\n        </div>\r\n    )\r\n}\r\nfunction mapStateToProps(reduxState){\r\n    return reduxState\r\n}\r\nexport default connect(mapStateToProps)(withRouter(TripDisplay))","S:\\Projects\\transport-tracker\\src\\components\\Trip\\Trip.js",["128","129","130","131"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport ReceiptForm from '../Forms/ReceiptForm'\r\nimport moment from 'moment'\r\nimport MapboxGL from '../MapboxGL/MapboxGL'\r\nimport './Trip.scss'\r\nimport '../styles/styles.scss'\r\nimport Receipt from '../Receipt/Receipt'\r\nimport Pie from '../Charts/Pie'\r\nimport Bar from '../Charts/Bar'\r\nimport { GridLoader } from 'react-spinners'\r\nimport Button from '@material-ui/core/Button';\r\nimport LocalGasStationIcon from '@material-ui/icons/LocalGasStation';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport 'dotenv'\r\nconst { REACT_APP_MAPBOX_APIKEY} = process.env;\r\n\r\n\r\nfunction Trip (props){\r\n    const [formToggle,setFormToggle]=useState(false)\r\n    const [receipts,setReceipts]=useState([])   \r\n    const [pos, setPos]= useState({lng:null,lat:null})\r\n    const [quickToggle, setQuickToggle]=useState(false)\r\n\r\n    const form={\r\n        city:null,\r\n        state:null,\r\n        date_created:moment(new Date()).format(\"yyyy-MM-DD\"),\r\n        type:'gas',\r\n        amount:null,\r\n        total:null,\r\n        lat:null,\r\n        lng:null,\r\n    }\r\n    const [formReceipt, setFormReceipt]=useState(form)  \r\n\r\n    function successLocation(e){\r\n        console.log('success',e)    \r\n        const {longitude,latitude}=e.coords                        \r\n        setPos({lng:longitude,lat:latitude})                      \r\n      }  \r\n    \r\n      function errorLocation(e){\r\n        console.log('ERROR LOCATION')\r\n      \r\n    }\r\n    useEffect(() => {\r\n        if(props.d_id){\r\n            navigator.geolocation.getCurrentPosition(successLocation,errorLocation,{enableHighAccuracy:true})        \r\n        }\r\n    }, [props.d_id]);\r\n\r\n    //Company account get specific driver trips\r\n    const getCompanyDriverTripReceipts=()=>{        \r\n        axios.get(`/companies/${props.match.params.company_id}/trips/${props.match.params.trip_id}/receipts`)\r\n        .then(res=>setReceipts(res.data))\r\n        .catch(e=>console.log(e))        \r\n    } \r\n    //Driver account get specific trips\r\n    const getDriverTripReceipts=()=>{\r\n        console.log(props.match)\r\n        axios.get(`/drivers/${props.match.params.driver_d_id}/trips/${props.match.params.trip_id}/receipts`)\r\n        .then(res=>{\r\n            console.log(res.data)\r\n            setReceipts(res.data)})\r\n        .catch(e=>console.log(e))        \r\n    }\r\n    //conditional function to use appropriate call depending on account level\r\n    const getTrips=()=>{\r\n         \r\n        if(props.id){\r\n            console.log('getting company driver receipts')\r\n            getCompanyDriverTripReceipts()\r\n        }\r\n        else{\r\n            \r\n            getDriverTripReceipts()\r\n        }\r\n    }\r\n\r\n    const addReceipt=(receipt)=>{\r\n        if(props.id){\r\n            axios.post(`/companies/${props.id}/trips/${props.match.params.trip_id}/receipts`,receipt)\r\n            .then(res=>setReceipts([...receipts,res.data]))\r\n            .catch(e=>console.log(e))\r\n            setFormReceipt(form)            \r\n            getTrips()\r\n        }\r\n        else{\r\n            axios.post(`/drivers/${props.d_id}/trips/${props.match.params.trip_id}/receipts`,receipt)\r\n            .then(res=>setReceipts([...receipts,res.data]))\r\n            .catch(e=>console.log(e))\r\n            setFormReceipt(form) \r\n            getTrips()\r\n        }\r\n    }\r\n    \r\n    const quickAdd=(type)=>{\r\n        axios.get(`https://api.mapbox.com/geocoding/v5/mapbox.places/${pos.lng},${pos.lat}.json?access_token=${REACT_APP_MAPBOX_APIKEY}`)\r\n        .then(res=>{\r\n          console.log(res.data.features[res.data.features.length-3].place_name.split(','))\r\n          let placeArray=res.data.features[res.data.features.length-3].place_name.split(',')\r\n        //   props.setFormReceipt({...props.formReceipt,...e.lngLat,city:placeArray[0],state:placeArray[1]})\r\n        \r\n        axios.post(`/drivers/${props.d_id}/trips/${props.match.params.trip_id}/receipts`,{driver_d_id:props.d_id,company_id:props.match.params.company_id,city:placeArray[0],state:placeArray[1],lng:pos.lng,lat:pos.lat,date_created:moment(new Date()).format(\"yyyy-MM-DD\"),type})\r\n        .then(res=>getTrips())\r\n        .catch(e=>console.log(e))\r\n\r\n        })\r\n        \r\n        \r\n         alert('Quick Receipt Added')   \r\n    }\r\n  \r\n\r\n    useEffect(()=>{        \r\n        getTrips()                      \r\n    },[props.id,props.d_id])\r\n    \r\n    const handleFormToggle=()=>{        \r\n        setFormToggle(!formToggle)}\r\n    \r\n    const mappedReceipts=receipts.map((receipt,index)=>{\r\n        const editReceipt=()=>{\r\n            \r\n             axios.put(`/companies/${receipt.company_id}/drivers/${receipt.driver_d_id}/trips/${receipt.trip_id}/receipts/${receipt.id}`, formReceipt)\r\n             .then(res=>{\r\n                 setReceipts(res.data)\r\n                 //update trips\r\n                 console.log(res.data)\r\n                 setFormReceipt(form)\r\n                 getTrips()\r\n             })\r\n             .catch(e=>console.log(e))\r\n         }\r\n         const deleteReceipt=()=>{\r\n            axios.delete(`/companies/${receipt.company_id}/drivers/${receipt.driver_d_id}/trips/${receipt.trip_id}/receipts/${receipt.id}`)\r\n            .then(res=>{\r\n                \r\n                console.log(res.data)\r\n                getTrips()\r\n            })\r\n            .catch(e=>console.log(e))\r\n         }\r\n        //  console.log(moment(receipt.date_created).format(\"yyyy-MM-DD\"))\r\n    return(\r\n        <div>\r\n            <Receipt             \r\n            editReceipt={editReceipt}\r\n            deleteReceipt={deleteReceipt}\r\n            receipt={receipt}\r\n            setReceipts={setReceipts}\r\n            receipts={receipts}\r\n            formReceipt={formReceipt}\r\n            setFormReceipt={setFormReceipt}\r\n            getTrips={getTrips}   \r\n            setFormToggle={setFormToggle}\r\n        date_created={moment(receipt.date_created).format(\"yyyy-MM-DD\")}\r\n\r\n            />\r\n        </div>\r\n      \r\n    )    \r\n    })\r\n    \r\n   \r\n    return(\r\n        <div className='trip-display'>\r\n            <img key={Date.now()} src={props.profile_pic||\r\n            `https://persona-project.s3-us-west-1.amazonaws.com/${props.name.replace(/\\s/g, '-')}-${props.d_id}-profile_pic`\r\n            } className='profile-pic'   alt=''/>\r\n            <Button id='add-receipts' variant='contained' onClick={handleFormToggle}>Add Receipts</Button>\r\n            \r\n            {\r\n                formToggle&&\r\n                <ReceiptForm\r\n                formReceipt={formReceipt}\r\n                setFormReceipt={setFormReceipt}\r\n                receipts={receipts}\r\n                addReceipt={addReceipt}\r\n                setFormToggle={setFormToggle} \r\n                    />                    \r\n            } \r\n            \r\n            <MapboxGL\r\n            formReceipt={formReceipt}\r\n            setFormReceipt={setFormReceipt}\r\n            receipts={receipts} \r\n            d_id={props.d_id}\r\n            />            \r\n                    {\r\n                        pos.lat&&\r\n                <div className='quick-add'>\r\n                        \r\n                            <LocalGasStationIcon onClick={()=>quickAdd('gas')}/>\r\n                            <FastfoodIcon onClick={()=>quickAdd('food')}/>\r\n                            <BuildIcon onClick={()=>quickAdd('repair')}/>\r\n                            <DonutLargeIcon onClick={()=>quickAdd('tires')}/>\r\n                        \r\n\r\n\r\n\r\n                </div>\r\n                    }\r\n            <div className='pie-chart'>\r\n            <Pie receipts={receipts}\r\n            margin={{ top: 30, right: 0, bottom: 30, left: 0 }}/>\r\n            </div>\r\n            <div className='bar-chart'>\r\n            <Bar \r\n            company_id={props.match.params.company_id}\r\n            driver_d_id={props.match.params.driver_d_id}\r\n            trip_id={props.match.params.trip_id}\r\n            receipts={receipts}\r\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n            />\r\n            </div>\r\n            {mappedReceipts}             \r\n        </div>\r\n    )\r\n    }\r\n\r\nfunction mapStateToProps(reduxState){\r\n    return reduxState\r\n}\r\nexport default connect(mapStateToProps)(withRouter(Trip))","S:\\Projects\\transport-tracker\\src\\components\\Forms\\ReceiptForm.js",["132","133"],"import React, { useEffect, useState } from \"react\"\r\nimport moment from 'moment' \r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default function ReceiptForm(props){\r\n    const [date,setDate]=useState(moment(new Date()).format(\"yyyy-MM-DD\"))\r\n    \r\n    \r\n    // const [formReceipt, setFormReceipt]=useState({\r\n    //     date_created:null,\r\n    //     type:'',\r\n    //     amount:null,\r\n    //     total:null,\r\n    //     lat:null,\r\n    //     lng:null,\r\n    // })\r\n    const handleFormInput=(e)=>props.setFormReceipt({...props.formReceipt,[e.target.name]:e.target.value})\r\n    const handleAddReceipt=(e)=>{\r\n        e.preventDefault()\r\n        props.addReceipt(props.formReceipt)\r\n        props.setFormToggle(false) \r\n        \r\n    }\r\n    const handleEditReceipt=(e)=>{\r\n        e.preventDefault()\r\n        props.editReceipt(props.formReceipt)\r\n        props.setEditToggle(false)  \r\n    }\r\n    \r\n    useEffect(()=>{\r\n        \r\n        console.log('receipt form ')\r\n\r\n    },[props.formReceipt])\r\n    return(\r\n        <div>\r\n                <form onSubmit={!props.edit?handleAddReceipt:handleEditReceipt}>\r\n                <TextField disabled={props.edit} onChange={handleFormInput} placeholder='City' name='city' value={props.formReceipt.city||''}/>  \r\n                <TextField disabled={props.edit} onChange={handleFormInput} placeholder='State' name='state' value={props.formReceipt.state||''}/>\r\n                <TextField onChange={handleFormInput} name='date_created' type='date' defaultValue={props.date_created||date}/>\r\n                                    \r\n        <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\r\n        <Select\r\n         name='type'\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          defaultValue={props.formReceipt.type||''}\r\n          onChange={handleFormInput}\r\n          >\r\n          <MenuItem value='gas'>gas</MenuItem>\r\n          <MenuItem value='tires'>tires</MenuItem>\r\n          <MenuItem value='food'>food</MenuItem>\r\n          <MenuItem value='repair'>repair</MenuItem>  \r\n          \r\n                   \r\n        </Select>\r\n                   \r\n                <TextField onChange={handleFormInput} placeholder='Total' name='total' defaultValue={props.formReceipt.total||''}/>\r\n                <TextField disabled={props.edit} onChange={handleFormInput} placeholder='Lat' name='lat' value={props.formReceipt.lat||''}/>\r\n                <TextField disabled={props.edit} onChange={handleFormInput} placeholder='Lng' name='lng' value={props.formReceipt.lng||''}/>\r\n                <Button type='submit' variant='contained' id='submit-receipt'>Submit Receipt</Button>\r\n            </form>\r\n                       \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n","S:\\Projects\\transport-tracker\\src\\components\\Forms\\TripForm.js",["134"],"import { useState } from \"react\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport '../styles/styles.scss'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nfunction TripForm(props){\r\n    const [trip,setTrip]=useState({\r\n        name:'',\r\n        date_start:new Date().toLocaleString(),\r\n        date_end:null,\r\n        total:null,\r\n        company_id:props.id,\r\n        driver_d_id:props.d_id,\r\n        status:'active'\r\n    })\r\n    const handleChange=(e)=>setTrip({...trip,name:e.target.value})\r\n    const handleBeginTrip=(e)=>{\r\n        e.preventDefault()        \r\n        props.beginTrip(trip)\r\n        props.handleFormToggle(false)\r\n               \r\n    }\r\n    const handleEdit=(e)=>{\r\n\r\n    }\r\n    \r\n\r\n    return(\r\n        <div>\r\n            {props.add_trip&&\r\n        <form onSubmit={handleBeginTrip}>\r\n            <TextField defaultValue={trip.name} onChange={handleChange} name='name' placeholder='Name of Trip' />\r\n            <Button type='submit' variant='contained' id='start-trip'>Start</Button>            \r\n        </form>\r\n            \r\n            }\r\n            {\r\n                props.edit_trip&&\r\n                <form>\r\n                    <input />\r\n                    <input />\r\n                    <input />\r\n                </form>\r\n            }\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default withRouter(TripForm)","S:\\Projects\\transport-tracker\\src\\components\\MapboxGL\\MapboxGL.js",["135","136","137","138","139","140","141","142","143"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport mapboxgl, { Marker } from \"mapbox-gl\";\r\nimport Moment from 'react-moment'\r\nimport moment from 'moment'\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport './MapboxGL.scss'\r\nimport 'dotenv'\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport fuel from '../imgs/favpng_fuel-dispenser-clip-art.png'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction MapboxGL(props){\r\n    \r\n  // const [marker, setMarker]= useState(null) \r\n  const [pos, setPos]= useState({lat:null,lng:null})  \r\n  const mapContainer = useRef(\"\");\r\n  const [driverPos,setDriverPos]=useState({lng:null,lat:null})\r\n  \r\n  const { REACT_APP_MAPBOX_APIKEY} = process.env;\r\n\r\n  //replace public key\r\n  mapboxgl.accessToken = REACT_APP_MAPBOX_APIKEY\r\n    const styles = {\r\n        width: \"400px\",\r\n        height: \"400px\",\r\n        borderRadius: \"10px\"        \r\n      };\r\n     \r\n      useEffect(()=>{\r\n       let map=new mapboxgl.Map({\r\n          container:mapContainer.current,\r\n          style:'mapbox://styles/mapbox/streets-v11',\r\n          center:[-111,33],\r\n          zoom:3\r\n        })\r\n        \r\n        map.on('load',(e)=>{\r\n          //get driver lat and lng to create marker\r\n          axios.get(`/companies/${props.match.params.company_id}/drivers?q=${props.match.params.driver_d_id}`)\r\n          .then(res=>{\r\n            const markerNode = document.createElement('div')\r\n            markerNode.className='driver-marker'\r\n            markerNode.style.backgroundImage=`url(${res.data[1].profile_pic})`\r\n            console.log(markerNode)\r\n            console.log('new location',res.data)\r\n            new mapboxgl.Marker(\r\n              markerNode              \r\n              \r\n            )\r\n            .setLngLat(res.data[0]).addTo(map)\r\n          })\r\n          const receiptMarkers=  props.receipts.map((receipt,index)=>{  \r\n            let markerColors={gas:\"#81ae19\",food:\"#f47560\",tires:\"#f1e15b\",repair:'#61cdbb'}\r\n          let marker=                  \r\n         new mapboxgl.Marker({\r\n              \r\n              color: markerColors[receipt.type],\r\n              draggable: false,              \r\n              backgroundImage:  fuel,\r\n              \r\n            })\r\n\r\n            marker.setLngLat({lng:receipt.lng,lat:receipt.lat})            \r\n            .setPopup( new mapboxgl.Popup({ offset: 10,closeButton:false,className:\"popup\", })\r\n            .setHTML(`<h5>${moment(receipt.date_created).format(\"MMM Do YYYY\")}</h5>\r\n            <p>${receipt.type}</p>\r\n            <p>$ ${receipt.total}</p>            \r\n            `))\r\n            .addTo(map)\r\n          })\r\n          })\r\n          \r\n         //reverse geolocation api call to get state and city name on map double click\r\n        map.on('dblclick',(e)=>{         \r\n          \r\n          axios.get(`https://api.mapbox.com/geocoding/v5/mapbox.places/${e.lngLat.lng},${e.lngLat.lat}.json?access_token=${REACT_APP_MAPBOX_APIKEY}`)\r\n          .then(res=>{\r\n            console.log(res.data.features[res.data.features.length-3].place_name.split(','))\r\n            let placeArray=res.data.features[res.data.features.length-3].place_name.split(',')\r\n            props.setFormReceipt({...props.formReceipt,...e.lngLat,city:placeArray[0],state:placeArray[1]})\r\n          })\r\n          .catch(e=>console.log(e))\r\n        }) \r\n        \r\n        if(props.d_id){\r\n          map.addControl(map, 'top-left');\r\n          map.addControl(\r\n            new mapboxgl.GeolocateControl({\r\n            positionOptions: {\r\n            enableHighAccuracy: true\r\n            },\r\n            trackUserLocation: true\r\n            })\r\n          )\r\n        }\r\n      },[props.receipts])\r\n      \r\n     \r\n      \r\n      \r\n    \r\n    return(\r\n        <div>          \r\n              <div ref={(el) => (mapContainer.current = el)} style={styles} />\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(reduxState){\r\n  return reduxState\r\n}\r\nexport default connect(mapStateToProps)(withRouter(MapboxGL))","S:\\Projects\\transport-tracker\\src\\components\\Receipt\\Receipt.js",[],"S:\\Projects\\transport-tracker\\src\\components\\Charts\\Pie.js",["144"],"import { ResponsivePie } from \"@nivo/pie\"\r\nimport axios from \"axios\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport './Pie.scss'\r\nimport options from './options'\r\nimport { GridLoader } from 'react-spinners'\r\n\r\nfunction Pie(props){   \r\n    const [state,setState]=useState(null)\r\n    \r\n    const handleData=(input)=>({\r\n        'id':input.type,\r\n        'value':input.sum,        \r\n    })\r\n\r\n    useEffect(()=>{        \r\n        axios.get(`/companies/${props.match.params.company_id||props.company_id}/drivers/${props.match.params.driver_d_id||props.driver_d_id}/trips/${props.match.params.trip_id||props.trip_id}/receipts?q=tripTypeTotal`)\r\n        .then(res=>{\r\n            setState(res.data.map(receipt=>handleData(receipt)))            \r\n            console.log(\"chart data from state\",state)})\r\n        .catch(e=>console.error(e.response.data))\r\n\r\n    },[props.receipts,props.trip_id])\r\n    if(!state){\r\n        \r\n        return(\r\n            <GridLoader />\r\n        )\r\n    }\r\n    else{             \r\n    return(       \r\n                      \r\n            <ResponsivePie\r\n                data={state}\r\n                margin={props.margin}\r\n                innerRadius={0.5}\r\n                padAngle={0.7}\r\n                cornerRadius={3}               \r\n                borderWidth={1}\r\n                borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\r\n                radialLabelsSkipAngle={10}\r\n                radialLabelsTextColor={{ from: 'color', modifiers: [] }}\r\n                radialLabelsLinkColor={{ from: 'color' }}\r\n                sliceLabelsSkipAngle={10}\r\n                sliceLabelsTextColor=\"#33333\"\r\n                radialLabelsLinkDiagonalLength={props.radialLabelsLinkDiagonalLength}\r\n                radialLabelsLinkHorizontalLength={props.radialLabelsLinkHorizontalLength}\r\n                defs={options.defs}\r\n                fill={options.fill}  \r\n                \r\n                        \r\n            />\r\n        \r\n)\r\n    }       \r\n    }\r\n    export default withRouter(Pie)","S:\\Projects\\transport-tracker\\src\\components\\Charts\\Bar.js",["145"],"import {ResponsiveBar} from \"@nivo/bar\"\r\nimport axios from \"axios\"\r\nimport React, {useEffect, useState} from 'react'\r\nimport options from './options'\r\nimport {handleData, groupBy, getStates} from './barFunctions'\r\nimport { GridLoader } from 'react-spinners'\r\n\r\nexport default function Bar(props){\r\n    const[state,setState]=useState(null)\r\n\r\n    useEffect(()=>{        \r\n        axios.get(`/companies/${props.company_id}/drivers/${props.driver_d_id}/trips/${props.trip_id}/receipts?q=tripStateTypeTotal`)\r\n        .then(res=>{\r\n            console.log('bar',res.data) \r\n            //series of functions to get the data in the correct format to display on chart           \r\n            const firstSort=res.data.map(receipt=>handleData(receipt))      \r\n                \r\n          const groupedStates = groupBy(firstSort);               \r\n            let finalR=getStates(groupedStates)   \r\n            setState(finalR)   \r\n           \r\n            })\r\n        .catch(e=>console.error(e.response.data))\r\n\r\n    },[props.receipts,props.trip_id])\r\n\r\n    if(!state){\r\n        return(\r\n            <GridLoader />\r\n        )\r\n    }\r\n    else{    \r\n\r\n    return(\r\n        <ResponsiveBar\r\n        data={state}\r\n        keys={[ 'gas', 'food', 'repair', 'tires']}\r\n        indexBy='state'\r\n        label={d => `${d.value}`}\r\n        margin={props.margin}\r\n        \r\n        padding={0.3}\r\n        valueScale={{ type: 'linear' }}\r\n        indexScale={{ type: 'band', round: true }}\r\n        colors={{ scheme: 'nivo' }}      \r\n        layout=\"horizontal\"\r\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'total',\r\n            legendPosition: 'middle',\r\n            legendOffset: 32\r\n        }}\r\n        axisLeft={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,            \r\n            legendPosition: 'middle',\r\n            legendOffset: -40\r\n        }}\r\n        labelSkipWidth={12}\r\n        labelSkipHeight={12}\r\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n        legends={[\r\n            {\r\n                dataFrom: 'value',\r\n                anchor: 'bottom-right',\r\n                direction: 'column',\r\n                justify: false,\r\n                translateX: 120,\r\n                translateY: -100,\r\n                itemsSpacing: 2,\r\n                itemWidth: 100,\r\n                itemHeight: 20,\r\n                itemDirection: 'left-to-right',\r\n                itemOpacity: 0.85,\r\n                symbolSize: 20,\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemOpacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n        animate={true}\r\n        motionStiffness={90}\r\n        motionDamping={15}\r\n        defs={options.defs}\r\n        fill={options.fill} \r\n    />\r\n    )\r\n}\r\n}","S:\\Projects\\transport-tracker\\src\\components\\Charts\\options.js",[],"S:\\Projects\\transport-tracker\\src\\components\\Charts\\barFunctions.js",[],"S:\\Projects\\transport-tracker\\src\\components\\Driver\\DriverEdit.js",["146","147"],"import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport { GridLoader } from 'react-spinners'\r\nimport randomstring from 'randomstring'\r\nimport axios from 'axios'\r\n\r\nexport default function DriverEdit (props){\r\n    const[isUploading,setIsUploading]=useState(false)\r\n    const[url,setUrl]=useState('http://via.placeholder.com/450x450')    \r\n    const getSignedRequest=([file])=>{\r\n        setIsUploading(true)\r\n        const fileName = `${props.driver.name.replace(/\\s/g, '-')}-${props.driver.driver_d_id}-profile_pic`; \r\n        \r\n        axios.get('/api/s3',{\r\n            params:{\r\n                'file-name':fileName,\r\n                'file-type': file.type,\r\n            }\r\n        })\r\n        .then(res=>{\r\n            console.log('signed response from server',res.data)\r\n            const { signedRequest, url}=res.data            \r\n            uploadFile(file,signedRequest,url)\r\n        })\r\n        .catch(e=>console.log(e))\r\n\r\n        const uploadFile=(file,signedRequest,url)=>{\r\n           const options ={\r\n               headers:{\r\n                   'Content-Type':file.type\r\n               }\r\n           } \r\n           axios.put(signedRequest, file, options)\r\n           .then(res=>{\r\n               console.log('axios put request',res.data)\r\n               setIsUploading(false)\r\n               setUrl(url)\r\n               console.log('url state has been set',url)\r\n               //Need DB request here\r\n               axios.put(`/companies/${props.driver.company_id}/drivers/${props.driver.driver_d_id}?q=profile_pic`, {url})\r\n            .then(res=>{\r\n                console.log('res.data from the db request',res.data)\r\n                props.updatePic()})\r\n            .catch(e=>console.log(e))\r\n            \r\n           props.handleFormToggle(false)\r\n        })\r\n           .catch(e=>{\r\n               setIsUploading(false)\r\n               if(e.status === 403){\r\n                   alert(`Your request for a signed URL failed with a status 403. Double check the CORS configuration  ${e.stack}`)\r\n               }\r\n               else{\r\n                   alert(`ERROR : ${e.status}\\n ${e.stack}`)\r\n               }\r\n           })\r\n\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <Dropzone\r\n    onDropAccepted={getSignedRequest}\r\n    accept=\"image/*\"\r\n    multiple={false}>\r\n    {({getRootProps, getInputProps}) => (\r\n    <div \r\n        style = {{\r\n        position: 'relative',\r\n        width: 160,\r\n        height: 80,\r\n        borderWidth: 5,\r\n        marginTop: 25,\r\n        borderColor: 'gray',\r\n        borderStyle: 'dashed',\r\n        borderRadius: 5,\r\n        display: 'inline-block',\r\n        fontSize: 17,}}\r\n        {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        {isUploading ? <GridLoader /> : <p>Drop files here, or click to select files</p>}\r\n    </div>\r\n    )}\r\n</Dropzone>\r\n        </div>\r\n    )\r\n}","S:\\Projects\\transport-tracker\\src\\components\\MapboxGL\\DriverMap.js",["148","149","150","151"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport mapboxgl, { Marker } from \"mapbox-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport './MapboxGL.scss'\r\nimport 'dotenv'\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nconst { REACT_APP_MAPBOX_APIKEY} = process.env;\r\n\r\nfunction DriverMap(props){\r\n    \r\n    const mapContainer = useRef(\"\");\r\n    \r\n    \r\n    mapboxgl.accessToken = REACT_APP_MAPBOX_APIKEY\r\n    const styles = {\r\n        width: \"600px\",\r\n        height: \"600px\",\r\n        borderRadius: \"10px\"        \r\n    };\r\n    useEffect(()=>{\r\n        let map=new mapboxgl.Map({\r\n            container:mapContainer.current,\r\n            style:'mapbox://styles/mapbox/streets-v11',\r\n            center:[-111,33],\r\n            zoom:3\r\n        })\r\n        map.on('load',(e)=>{\r\n            //get driver lat and lng to create marker\r\n            axios.get(`/companies/${props.id}/drivers`)\r\n            .then(res=>{\r\n                \r\n                console.log('new location',res.data)\r\n                res.data.map(driver=>{\r\n                    const markerNode = document.createElement('div')\r\n                    markerNode.className='driver-marker'\r\n                    markerNode.style.backgroundImage=`url(https://persona-project.s3-us-west-1.amazonaws.com/${driver.name.replace(/\\s/g, '-')}-${driver.driver_d_id}-profile_pic)`\r\n                    \r\n                              \r\n                    new mapboxgl.Marker(\r\n                        markerNode            \r\n                        \r\n                        )\r\n                        .setLngLat({lng:driver.lng,lat:driver.lat})\r\n                        .setPopup( new mapboxgl.Popup()\r\n                        .setHTML(`<h3>${driver.name}</h3>`)\r\n                        )\r\n                        .addTo(map)\r\n                        \r\n              })\r\n                \r\n            })\r\n        })\r\n\r\n    },[props.drivers])\r\n\r\n    return(\r\n        <div ref={(el) => (mapContainer.current = el)} style={styles} />\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(reduxState){\r\n    return reduxState\r\n}\r\nexport default connect(mapStateToProps)(withRouter(DriverMap))","S:\\Projects\\transport-tracker\\src\\components\\Home\\Welcome.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":51,"column":7,"nodeType":"158","endLine":51,"endColumn":9,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"160","line":59,"column":7,"nodeType":"158","endLine":59,"endColumn":19,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":4,"column":10,"nodeType":"164","messageId":"165","endLine":4,"endColumn":14},{"ruleId":"162","severity":1,"message":"166","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":18},{"ruleId":"156","severity":1,"message":"167","line":48,"column":7,"nodeType":"158","endLine":48,"endColumn":9,"suggestions":"168"},{"ruleId":"162","severity":1,"message":"169","line":9,"column":8,"nodeType":"164","messageId":"165","endLine":9,"endColumn":17},{"ruleId":"162","severity":1,"message":"169","line":12,"column":8,"nodeType":"164","messageId":"165","endLine":12,"endColumn":17},{"ruleId":"162","severity":1,"message":"170","line":23,"column":12,"nodeType":"164","messageId":"165","endLine":23,"endColumn":21},{"ruleId":"162","severity":1,"message":"171","line":23,"column":23,"nodeType":"164","messageId":"165","endLine":23,"endColumn":35},{"ruleId":"162","severity":1,"message":"172","line":27,"column":12,"nodeType":"164","messageId":"165","endLine":27,"endColumn":18},{"ruleId":"162","severity":1,"message":"173","line":27,"column":19,"nodeType":"164","messageId":"165","endLine":27,"endColumn":28},{"ruleId":"162","severity":1,"message":"174","line":30,"column":11,"nodeType":"164","messageId":"165","endLine":30,"endColumn":17},{"ruleId":"162","severity":1,"message":"175","line":73,"column":11,"nodeType":"164","messageId":"165","endLine":73,"endColumn":26},{"ruleId":"156","severity":1,"message":"176","line":83,"column":11,"nodeType":"158","endLine":83,"endColumn":45,"suggestions":"177"},{"ruleId":"162","severity":1,"message":"178","line":85,"column":15,"nodeType":"164","messageId":"165","endLine":85,"endColumn":27},{"ruleId":"162","severity":1,"message":"179","line":13,"column":10,"nodeType":"164","messageId":"165","endLine":13,"endColumn":20},{"ruleId":"162","severity":1,"message":"180","line":27,"column":12,"nodeType":"164","messageId":"165","endLine":27,"endColumn":23},{"ruleId":"162","severity":1,"message":"181","line":27,"column":25,"nodeType":"164","messageId":"165","endLine":27,"endColumn":39},{"ruleId":"156","severity":1,"message":"176","line":122,"column":7,"nodeType":"158","endLine":122,"endColumn":28,"suggestions":"182"},{"ruleId":"162","severity":1,"message":"183","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":19},{"ruleId":"162","severity":1,"message":"184","line":11,"column":17,"nodeType":"164","messageId":"165","endLine":11,"endColumn":24},{"ruleId":"162","severity":1,"message":"185","line":25,"column":11,"nodeType":"164","messageId":"165","endLine":25,"endColumn":21},{"ruleId":"162","severity":1,"message":"186","line":2,"column":20,"nodeType":"164","messageId":"165","endLine":2,"endColumn":26},{"ruleId":"162","severity":1,"message":"187","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":14},{"ruleId":"162","severity":1,"message":"188","line":16,"column":10,"nodeType":"164","messageId":"165","endLine":16,"endColumn":13},{"ruleId":"162","severity":1,"message":"189","line":16,"column":15,"nodeType":"164","messageId":"165","endLine":16,"endColumn":21},{"ruleId":"162","severity":1,"message":"190","line":18,"column":10,"nodeType":"164","messageId":"165","endLine":18,"endColumn":19},{"ruleId":"162","severity":1,"message":"191","line":18,"column":20,"nodeType":"164","messageId":"165","endLine":18,"endColumn":32},{"ruleId":"162","severity":1,"message":"192","line":53,"column":17,"nodeType":"164","messageId":"165","endLine":53,"endColumn":31},{"ruleId":"193","severity":1,"message":"194","line":53,"column":68,"nodeType":"195","messageId":"196","endLine":53,"endColumn":70},{"ruleId":"156","severity":1,"message":"197","line":97,"column":9,"nodeType":"158","endLine":97,"endColumn":25,"suggestions":"198"},{"ruleId":"156","severity":1,"message":"199","line":24,"column":7,"nodeType":"158","endLine":24,"endColumn":37,"suggestions":"200"},{"ruleId":"156","severity":1,"message":"201","line":25,"column":7,"nodeType":"158","endLine":25,"endColumn":37,"suggestions":"202"},{"ruleId":"162","severity":1,"message":"203","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":20},{"ruleId":"162","severity":1,"message":"204","line":9,"column":11,"nodeType":"164","messageId":"165","endLine":9,"endColumn":14},{"ruleId":"162","severity":1,"message":"205","line":1,"column":36,"nodeType":"164","messageId":"165","endLine":1,"endColumn":44},{"ruleId":"162","severity":1,"message":"186","line":2,"column":20,"nodeType":"164","messageId":"165","endLine":2,"endColumn":26},{"ruleId":"193","severity":1,"message":"194","line":37,"column":36,"nodeType":"195","messageId":"196","endLine":37,"endColumn":38},{"ruleId":"156","severity":1,"message":"206","line":58,"column":7,"nodeType":"158","endLine":58,"endColumn":22,"suggestions":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props', 'successLocation', and 'updateLocation'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["210"],"React Hook useEffect has missing dependencies: 'successLocation' and 'updateLocation'. Either include them or remove the dependency array.",["211"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'DriverEdit' is defined but never used.","React Hook useEffect has a missing dependency: 'getDrivers'. Either include it or remove the dependency array.",["212"],"'TextField' is defined but never used.","'newTripId' is assigned a value but never used.","'setNewTripId' is assigned a value but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'getPic' is assigned a value but never used.","'handleEditTrips' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTrips'. Either include it or remove the dependency array.",["213"],"'handleChange' is assigned a value but never used.","'GridLoader' is defined but never used.","'quickToggle' is assigned a value but never used.","'setQuickToggle' is assigned a value but never used.",["214"],"'FormControl' is defined but never used.","'setDate' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","'Marker' is defined but never used.","'Moment' is defined but never used.","'pos' is assigned a value but never used.","'setPos' is assigned a value but never used.","'driverPos' is assigned a value but never used.","'setDriverPos' is assigned a value but never used.","'receiptMarkers' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'REACT_APP_MAPBOX_APIKEY' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["215"],"React Hook useEffect has missing dependencies: 'props.company_id', 'props.driver_d_id', 'props.match.params.company_id', 'props.match.params.driver_d_id', 'props.match.params.trip_id', and 'state'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has missing dependencies: 'props.company_id' and 'props.driver_d_id'. Either include them or remove the dependency array.",["217"],"'randomstring' is defined but never used.","'url' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["218"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [props, successLocation, updateLocation]",{"range":"237","text":"238"},"Update the dependencies array to be: [props.d_id, successLocation, updateLocation]",{"range":"239","text":"240"},"Update the dependencies array to be: [getDrivers]",{"range":"241","text":"242"},"Update the dependencies array to be: [trips.length, props.id, props.d_id, getTrips]",{"range":"243","text":"244"},"Update the dependencies array to be: [props.id, props.d_id, getTrips]",{"range":"245","text":"246"},"Update the dependencies array to be: [REACT_APP_MAPBOX_APIKEY, props, props.receipts]",{"range":"247","text":"248"},"Update the dependencies array to be: [props.company_id, props.driver_d_id, props.match.params.company_id, props.match.params.driver_d_id, props.match.params.trip_id, props.receipts, props.trip_id, state]",{"range":"249","text":"250"},"Update the dependencies array to be: [props.company_id, props.driver_d_id, props.receipts, props.trip_id]",{"range":"251","text":"252"},"Update the dependencies array to be: [props.drivers, props.id]",{"range":"253","text":"254"},[1688,1690],"[props, successLocation, updateLocation]",[1962,1974],"[props.d_id, successLocation, updateLocation]",[1517,1519],"[getDrivers]",[2954,2988],"[trips.length, props.id, props.d_id, getTrips]",[4570,4591],"[props.id, props.d_id, getTrips]",[3680,3696],"[REACT_APP_MAPBOX_APIKEY, props, props.receipts]",[917,947],"[props.company_id, props.driver_d_id, props.match.params.company_id, props.match.params.driver_d_id, props.match.params.trip_id, props.receipts, props.trip_id, state]",[1011,1041],"[props.company_id, props.driver_d_id, props.receipts, props.trip_id]",[1973,1988],"[props.drivers, props.id]"]